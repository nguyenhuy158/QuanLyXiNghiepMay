using DevExpress.XtraBars;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using QuanLyXiNghiepMay.R;

namespace QuanLyXiNghiepMay.Forms.Form_Tables.Form_Detail.Form_Phieu_Phan_Cong
{
    public partial class FormChiTietPhieuPhanCong : DevExpress.XtraBars.Ribbon.RibbonForm
    {
        public FormChiTietPhieuPhanCong()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            QuanLyXiNghiepMay.QuanLyVatTuCuaXiNghiepMayEntities dbContext = new QuanLyXiNghiepMay.QuanLyVatTuCuaXiNghiepMayEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.ChiTietPhieuPhanCongs.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext.ChiTietPhieuPhanCongs.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void RibbonFormChiTietPhieuPhanCong_Load(object sender, EventArgs e)
        {
            Precenter.loadDataSourceComboBox(comboBoxSoPhieuPhanCong, Constance.KEY_SO_PHIEU_PHAN_CONG);

            Precenter.loadDataSourceComboBox(comboBoxMaSanPham, Constance.KEY_MA_SAN_PHAM);
            Precenter.loadDataSourceComboBox(comboBoxTenSanPham, Constance.KEY_TEN_SAN_PHAM);
            clearForm();
        }

        private void clearForm()
        {
            //String ma = Precenter.getMaPhieuPhanCong();
            //textEditSoPhieuPhanCong.Text = ma;
            //dateEditNgayTao.EditValue = DateTime.Now;
            textEditSoLuong.Focus();
            textEditSoLuong.Text = "";
        }

        private void barButtonItem7_ItemClick(object sender, ItemClickEventArgs e)
        {
            Dispose();
        }

        private void barButtonItem4_ItemClick(object sender, ItemClickEventArgs e)
        {
            Precenter.reloadDataSource(this, gridControl1);
        }

        private void barButtonItem5_ItemClick(object sender, ItemClickEventArgs e)
        {
            clearForm();
        }

        private void comboBoxTenSanPham_SelectedIndexChanged(object sender, EventArgs e)
        {
            comboBoxMaSanPham.SelectedIndex = comboBoxTenSanPham.SelectedIndex;
        }

        private void updateChiTietPhieuPhanCong()
        {
            ChiTietPhieuPhanCong chiTietPhieuPhanCong = (from t in Precenter.data.ChiTietPhieuPhanCongs
                                                         where t.soPhieuPhanCong == comboBoxSoPhieuPhanCong.SelectedValue.ToString() && t.maSanPham == comboBoxMaSanPham.SelectedValue.ToString()
                                                         select t).SingleOrDefault();

            chiTietPhieuPhanCong.soLuong = int.Parse(textEditSoLuong.Text);
            Precenter.data.SaveChanges();
        }
        private void addChiTietPhieuPhanCong()
        {
            ChiTietPhieuPhanCong chiTietPhieuPhanCong = new ChiTietPhieuPhanCong();
            chiTietPhieuPhanCong.soPhieuPhanCong = comboBoxSoPhieuPhanCong.SelectedValue.ToString();
            chiTietPhieuPhanCong.maSanPham = comboBoxMaSanPham.SelectedValue.ToString();
            chiTietPhieuPhanCong.soLuong = int.Parse(textEditSoLuong.Text);
            Precenter.data.ChiTietPhieuPhanCongs.Add(chiTietPhieuPhanCong);
            Precenter.data.SaveChanges();
        }

        private void removeChiTietPhieuPhanCong()
        {
            var chiTietPhieuPhanCong = (
                            from t in Precenter.data.ChiTietPhieuPhanCongs.ToList()
                            where t.soPhieuPhanCong == comboBoxSoPhieuPhanCong.SelectedValue.ToString() && t.maSanPham == comboBoxMaSanPham.SelectedValue.ToString()
                            select t
                                  ).SingleOrDefault();

            Precenter.data.ChiTietPhieuPhanCongs.Remove(chiTietPhieuPhanCong);
            Precenter.data.SaveChanges();
        }

        private void barButtonItem3_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (Controler.isMessageBox(MyTemplateString.MESSAGE_DELETE, MyTemplateString.TITLE_WARNING))
            {
                try
                {
                    removeChiTietPhieuPhanCong();
                    Precenter.reloadDataSource(this, gridControl1);
                    clearForm();
                }
                catch (Exception)
                {
                    Controler.messageBoxShow(MyTemplateString.PICK_ONE_ROW, MyTemplateString.TITLE_WARNING);
                }
            }
        }

        private void barButtonItem2_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (!Controler.isTextInputValid(textEditSoLuong.Text.ToString()))
            {
                Controler.messageBoxShow(MyTemplateString.MESSAGE_INPUT_ERROR, MyTemplateString.TITLE_WARNING);
            }
            else
            {
                try
                {
                    updateChiTietPhieuPhanCong();
                    Precenter.reloadDataSource(this, gridControl1);
                    clearForm();
                }
                catch (Exception)
                {
                    Controler.messageBoxShow(MyTemplateString.MESSAGE_UPDATE_ERROR, MyTemplateString.TITLE_WARNING);
                    textEditSoLuong.Focus();
                }
            }
        }

        private void barButtonItem1_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (!Controler.isTextInputValid(textEditSoLuong.Text.ToString()))
            {
                Controler.messageBoxShow(MyTemplateString.MESSAGE_INPUT_ERROR, MyTemplateString.TITLE_WARNING);
            }
            else
            {
                try
                {
                    addChiTietPhieuPhanCong();
                    Precenter.reloadDataSource(this, gridControl1);
                    clearForm();
                }
                catch (Exception)
                {
                    Controler.messageBoxShow(MyTemplateString.MESSAGE_INSERT_ERROR, MyTemplateString.TITLE_WARNING);
                    textEditSoLuong.Focus();
                }
            }
        }

        private void gridView11_RowCellClick(object sender, DevExpress.XtraGrid.Views.Grid.RowCellClickEventArgs e)
        {
            int rowHandle = e.RowHandle;
            ChiTietPhieuPhanCong chiTietPhieuPhanCong = (ChiTietPhieuPhanCong)gridView1.GetRow(e.RowHandle);


            comboBoxSoPhieuPhanCong.SelectedValue = chiTietPhieuPhanCong.soPhieuPhanCong;
            comboBoxMaSanPham.SelectedValue = chiTietPhieuPhanCong.maSanPham;
            comboBoxTenSanPham.SelectedValue = chiTietPhieuPhanCong.SanPham.ten;
            textEditSoLuong.Text = chiTietPhieuPhanCong.soLuong.ToString();
        }
    }
}